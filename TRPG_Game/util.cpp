#include "util.h"



int keyControl() {
    char temp = _getch();

    if (temp == 'w' || temp == 'W') {
        return UP;
    }
    else if (temp == 'a' || temp == 'A') {
        return LEFT;
    }
    else if (temp == 's' || temp == 'S') {
        return DOWN;
    }
    else if (temp == 'd' || temp == 'D') {
        return RIGHT;
    }
    else if (temp == ' ') { // space bar 선택 버튼
        return SUBMIT;
    }
    return -1; // 다른 경우에 대해 기본 반환 값
}

void gotoxy(int x, int y) {
    COORD pos = { static_cast<SHORT>(x), static_cast<SHORT>(y) };
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void titleDraw() {
    std::cout << "\n\n\n\n";
    std::cout<<"\t\t" << "    ######      #####         ##         ####    ######       ####    ##### \n";
    std::cout << "\t\t" << "      ##        ##  ##      ##  ##        ##       ##        ##  ##   ##  ## \n";
    std::cout << "\t\t" << "      ##        #####       ######        ##       ##        ##  ##   ##### \n";
    std::cout << "\t\t" << "      ##        ##  ##     ##    ##      ####      ##         ####    ##  ## \n";
    std::cout << "\t\t" << "      \n   \t\t\t\t     당신은 회사로부터 해고를 선고 받는다... \n \t\t\t\t     킬러였던 당신의 해고는 곧 죽음이였다 \n\t\t\t\t     일주일간 살아남아라.. 그럼 살아나갈 수 있을것이다\n";
}

void infoDraw() {
    system("cls"); // 화면 모두 지우기
    std::cout << "\n\n\n";
    std::cout << "                 \t [ 조작법 ]\n\n";
    std::cout << "             \t 이동: W, A, S, D\n";
    std::cout << "             \t 선택: 스페이스바\n\n\n\n";
    std::cout << "    \t  개발자: codevkr.tistory.com\n\n\n";
    std::cout << "\t스페이스바를 누르면 메인화면으로 이동합니다.\n";

    while (1) {
        if (keyControl() == SUBMIT) {
            break;
        }
    }
}

int menuDraw() {
    int x = 50;
    int y = 15;
    gotoxy(x - 2, y);
    std::cout << "> 게임시작   ";
    gotoxy(x, y + 1);
    std::cout << "게임정보  ";
    gotoxy(x, y + 2);
    std::cout << "  종료  ";

    while (true) {
        int n = keyControl();
        switch (n) {
        case UP: {
            if (y > 15) {
                gotoxy(x - 2, y);
                std::cout << " ";
                gotoxy(x - 2, --y);
                std::cout << ">";
            }
            break;
        }

        case DOWN: {
            if (y < 17) {
                gotoxy(x - 2, y);
                std::cout << " ";
                gotoxy(x - 2, ++y);
                std::cout << ">";
            }
            break;
        }

        case SUBMIT: {
            return y - 15; // 선택한 메뉴의 인덱스를 반환합니다.
        }
        default:
            break;
        }
    }
}


void EndingDraw() {
    system("cls");
    std::cout << "\t\t" << "                                       ###     ##             \n";
    std::cout << "\t\t" << "                                        ##                    \n";
    std::cout << "\t\t" << "##  ##    ####    ##  ##                ##    ###      ####   \n";
    std::cout << "\t\t" << "##  ##   ##  ##   ##  ##             #####     ##     ##  ##  \n";
    std::cout << "\t\t" << "##  ##   ##  ##   ##  ##            ##  ##     ##     ######  \n";
    std::cout << "\t\t" << " #####   ##  ##   ##  ##            ##  ##     ##     ##      \n";
    std::cout << "\t\t" << "   ##     ####    ######            ######   ####     ######  \n";
    std::cout << "\t\t" << "##### "<< std::endl;
    exit(0);

}




char tempMap[20][100];
char map1[20][100] = {
    {"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"},
    {"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}
};

void init() {
    // 초기화 코드 추가 (필요한 경우)
    system("mode con cols=100 lines=20 | title 게임제목");
}

void drawMap() {

    int h, w;
    
    for (h = 0; h < 20; h++) {
        for (w = 0; w < 100; w++) {
            char temp = tempMap[h][w];
            if (temp == '0') {
                setColor(black, black);
                std::cout << " ";
            }
            else if (temp == '1') {
                setColor(white, white);
                std::cout << '#';
            }
        }
        std::cout << std::endl;
    }
    setColor(white, black);
}


void setColor(int forground, int background) {
    HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
    int code = forground + background * 16;
    SetConsoleTextAttribute(consoleHandle, code);
}

void gLoop(int mapCode) {
    int playing = 1;
    if (mapCode == 0) {
        memcpy(tempMap, map1, sizeof(tempMap));
    }

    drawMap();

    while (playing) {
    }
}
